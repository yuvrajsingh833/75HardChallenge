//Hard Day-2
//Accenture Coding Questions-05/09/2024

//Question 1: Rat Count House

/**
 * Accenture
 */

import java.util.*;

/* public class Accenture {

    public static int countHouse(int r,int unit,int arr[],int n){
        if(n==0){
            return -1;
        }

        int totalFood=r*unit;
        int sum=0;

        int noOfHouse=0;
        for(int i=0;i<n;i++){
            sum+=arr[i];
            noOfHouse++;
            if(sum>=totalFood){
                break;
            }

        }
        if(sum<totalFood) 
            return 0;

        return noOfHouse;
    }

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int r=sc.nextInt();
        int unit=sc.nextInt();
        int n=sc.nextInt();
        int arr[]=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        System.out.println(countHouse(r, unit, arr, n));
    }
} */

//Quetions-2-- Binary number system

/**
 * Accenture
 */
/* public class Accenture {
    public static int binarySystem(String str){
        int n=str.length();
        if(n==0) return -1;
        int res=str.charAt(0)-'0';

        for(int i=1;i<n;i++){
            if(str.charAt(i)=='A'){
               res=res & (str.charAt(i+1)-'0');
            }if(str.charAt(i)=='B'){
                res=res | (str.charAt(i+1)-'0');
            }if(str.charAt(i)=='C'){
                res=res ^ (str.charAt(i+1)-'0');
            }
        }
        return res;

    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        String str=sc.next();
        System.out.println(binarySystem(str));
    }
} */


//Question 3: Password Checker

/**
 * Accenture
 */
/* public class Accenture {

    public static int passwordChecker(String str){
        int n=str.length();
        

        if(n<4) return 0;

        if(str.charAt(0)>='0' && str.charAt(0)<='9') return 0;

        int num=0;
        int cap=0;

        for(int i=0;i<n;i++){
            if(str.charAt(i)=='/' || str.charAt(i)==' '){
                return 0;
            }

            if(str.charAt(i)>='0' && str.charAt(i)<='9'){
                num++;
            }
            if(str.charAt(i)>='A' && str.charAt(i)<='Z'){
                cap++;
            }
               
        }

        if(num>=1 && cap>=1){
            return 1;
        }else{
            return 0;
        }
        
    }

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        String str=sc.next();
        System.out.println(passwordChecker(str));
    }
} */


//Question 4:findCount

/**
 * Accenture
 */
/* public class Accenture {

    public static int findCount(int arr[],int diff,int num){
            int n=arr.length;
            int count=0;

            for(int i=0;i<n;i++){
               if(Math.abs(arr[i]-num)<=diff){
                count++;
               }
            }
       return count>0? count:-1;
    }
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int t = sc.nextInt();

        while(t-- > 0){

            int n=sc.nextInt();
            int diff=sc.nextInt();
            int num=sc.nextInt();
            int arr[]=new int[n];
            for(int i=0;i<n;i++){
                arr[i]=sc.nextInt();
            }
            System.out.println(findCount(arr, diff, num));
        }
        
    }
} */

//Question 5- differenceofSum(n. m)

/**
 * Accenture
 */
/* public class Accenture {
    public static int differenceofSum(int n,int m){
        int sum1=0, sum2=0;
        for(int i=0;i<=m;i++){
            if(i%n==0){
                sum1+=i;
            }else{
                sum2+=i;
            }
        }

        return Math.abs(sum1-sum2);
        
    }

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();

        while(t-->0){
           int n=sc.nextInt();
           int m=sc.nextInt(); 
           System.out.println(differenceofSum(n, m));
        }
    }
}
 */

 //Question-6 LargeSmallSum

/**
 * Accenture
 */
/* public class Accenture {

    public static int secondOddEvenSum(int arr[]){


        int n=arr.length;
        if(n<=3) return 0;
        ArrayList<Integer> even=new ArrayList<>();
        ArrayList<Integer> odd=new ArrayList<>();
        even.add(arr[0]);

        for(int i=1;i<n;i++){
            if(i%2==0){
                even.add(arr[i]);
            }else{
                odd.add(arr[i]);
            }
        }

        Collections.sort(even);
        Collections.sort(odd);

        int e=even.get(even.size()-2);
        int o=odd.get(odd.size()-2);

        return e+o;

    }

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();

        while (t-->0) {
            int n=sc.nextInt();
            int arr[]=new int[n];
            for(int i=0;i<n;i++){
                arr[i]=sc.nextInt();
            }
            System.out.println(secondOddEvenSum(arr));
        }
    }
}
 */


 // Quetsion-7 ProductSmallestPair

 /**
  * Accenture
  */
 public class Accenture {
    public static int productSmallestPair(int n,int sum,int arr[]){
        if(n<2) return -1;
        Arrays.sort(arr);
        

        for(int i=0;i<n;i++){
            for(int j=i+1;i<n;j++){
                if(arr[i]+arr[j]<=sum){
                    return arr[i]*arr[j];
                }
                break;
            }
            break;
        }

      return -1;

    }
 
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();

        while(t-->0){
            int n=sc.nextInt();
            int sum=sc.nextInt();
            int arr[]=new int[n];
            for(int i=0;i<n;i++){
                arr[i]=sc.nextInt();
            }
            System.out.println(productSmallestPair(n, sum, arr));
        }

   }
 }
